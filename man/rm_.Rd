% Generated by roxygen2 (4.0.1): do not edit by hand
\name{rm_}
\alias{rm_}
\title{Remove/Replace/Extract Function Generator}
\usage{
rm_(trim = TRUE, clean = TRUE, pattern, replacement = "",
  extract = FALSE, dictionary = getOption("regex.library"), ...)
}
\arguments{
\item{trim}{logical.  If \code{TRUE} removes leading and trailing white
spaces.}

\item{clean}{trim logical.  If \code{TRUE} extra white spaces and escaped
character will be removed.}

\item{pattern}{A character string containing a regular expression (or
character string for \code{fixed = TRUE}) to be matched in the given
character vector.}

\item{replacement}{Replacement for matched \code{pattern}.}

\item{extract}{logical.  If \code{TRUE} strings are extracted into a list of
vectors.}

\item{dictionary}{A dictionary of canned regular expressions to search within
if \code{pattern} begins with \code{"@rm_"}.}

\item{\dots}{A default \code{text.var} or other arguments passed to
\code{\link[base]{gsub}}.}
}
\value{
Returns a function that operates typical of other \pkg{qdapRegex}
\code{rm_XXX} functions but with user defined defaults.
}
\description{
Remove/replace/extract substrings from a string.  A function generator used
to make regex functions that operates typical of other \pkg{qdapRegex} \code{rm_XXX} functions.
}
\examples{
rm_digit <- rm_(pattern="[0-9]")
rm_digit("  I 12 li34ke ice56cream78.  ")

rm_lead <- rm_(pattern="^\\\\s+", trim = FALSE, clean = FALSE)
rm_lead("  I 12 li34ke ice56cream78.    ")

rm_all_except_letters <- rm_(pattern="[^ a-zA-Z]")
rm_all_except_letters("  I 12 li34ke ice56cream78.    ")

extract_consec_num <- rm_(pattern="[0-9]+", extract = TRUE)
extract_consec_num("  I 12 li34ke ice56cream78.  ")
}
\seealso{
\code{\link[pryr]{partial}}
}

