% Generated by roxygen2 (4.0.1): do not edit by hand
\name{rm_nchar_words}
\alias{rm_nchar_words}
\title{Remove/Replace/Extract N Letter Words}
\usage{
rm_nchar_words(text.var, n, trim = TRUE, clean = TRUE,
  pattern = sprintf("(?i)(?:'?[a-z]){\%s}(*SKIP)(*F)|('?\\\\b[a-z](?:'?[a-z]){\%s}\\\\b'?)",
  n + 1, n - 1), replacement = "", extract = FALSE, ...)
}
\arguments{
\item{text.var}{The text variable.}

\item{n}{The number of letters counted in the word.}

\item{trim}{logical.  If \code{TRUE} removes leading and trailing white
spaces.}

\item{clean}{trim logical.  If \code{TRUE} extra white spaces and escaped
character will be removed.}

\item{pattern}{A character string containing a regular expression (or
character string for \code{fixed = TRUE}) to be matched in the given
character vector.}

\item{replacement}{Replacement for matched \code{pattern}.}

\item{extract}{logical.  If \code{TRUE} the n letter words are extracted into a
list of vectors.}

\item{\dots}{Other arguments passed to \code{\link[base]{gsub}}.}
}
\value{
Returns a character string with n letter words removed.
}
\description{
Remove/replace/extract words that are n letters in length (apostrophes not counted).
}
\examples{
x <- "This Jon's dogs' 'bout there in word Mike's re'y."
rm_nchar_words(x, 4)
rm_nchar_words(x, 4, extract=TRUE)
\dontrun{
rm_nchar_words(hamlet$dialogue, 5, extract=TRUE)
}
}
\author{
\href{http://stackoverflow.com/}{stackoverflow's} hwnd and Tyler Rinker <tyler.rinker@gmail.com>.
}
\references{
The time regular expression was taken from:
\url{http://stackoverflow.com/a/25234538/1000343}
}
\seealso{
\code{\link[base]{gsub}}
}
\keyword{words}

