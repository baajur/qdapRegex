% Generated by roxygen2 (4.0.1): do not edit by hand
\name{rm_email}
\alias{rm_email}
\title{Remove/Replace/Extract Email Addresses}
\usage{
rm_email(text.var, trim = TRUE, clean = TRUE,
  pattern = qdapRegex::RE[["rm_email"]], replacement = "",
  extract = FALSE, ...)
}
\arguments{
\item{text.var}{The text variable.}

\item{trim}{logical.  If \code{TRUE} removes leading and trailing white
spaces.}

\item{clean}{trim logical.  If \code{TRUE} extra white spaces and escaped
character will be removed.}

\item{pattern}{A character string containing a regular expression (or
character string for \code{fixed = TRUE}) to be matched in the given
character vector.}

\item{replacement}{Replacement for matched \code{pattern}.}

\item{extract}{logical.  If \code{TRUE} the emails are extracted into a list
of vectors.}

\item{\dots}{Other arguments passed to \code{\link[base]{gsub}}.}
}
\value{
Returns a character string with email addresses removed.
}
\description{
Remove/replace/extract email addresses from a string.
}
\examples{
x <- paste("fred is fred@foo.com and joe is joe@example.com - but @this is a
    twitter handle for twit@here.com or foo+bar@google.com/fred@foo.fnord")

x2 <- c("fred is fred@foo.com and joe is joe@example.com - but @this is a",
    "twitter handle for twit@here.com or foo+bar@google.com/fred@foo.fnord",
    "hello world")

rm_email(x)
rm_email(x, replacement = '<a href="mailto:\\\\1" target="_blank">\\\\1</a>')
rm_email(x, extract=TRUE)
rm_email(x2, extract=TRUE)
}
\author{
Barry Rowlingson and Tyler Rinker <tyler.rinker@gmail.com>.
}
\references{
The email regular expression was taken from:
\url{http://stackoverflow.com/a/25077704/1000343}
}
\seealso{
\code{\link[base]{gsub}}
}
\keyword{email}

