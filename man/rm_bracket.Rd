% Generated by roxygen2 (4.0.1): do not edit by hand
\name{rm_bracket}
\alias{rm_bracket}
\title{Remove/Replace/Extract Brackets}
\usage{
rm_bracket(text.var, trim = TRUE, clean = TRUE, pattern = "all",
  replacement = "", extract = FALSE, include.bracket = FALSE,
  merge = TRUE)
}
\arguments{
\item{text.var}{The text variable.}

\item{trim}{logical.  If \code{TRUE} removes leading and trailing white
spaces.}

\item{clean}{trim logical.  If \code{TRUE} extra white spaces and escaped
character will be removed.}

\item{pattern}{The type of bracket (and encased text) to remove.  This is one
or more of the strings \code{"curly"}, \code{"square"}, \code{"round"},
\code{"angle"} and \code{"all"}.  These strings correspond
to: \{, [, (, < or all four types.}

\item{replacement}{Replacement for matched \code{pattern}.}

\item{extract}{logical.  If \code{TRUE} the bracketed text is extracted into
a list of vectors.}

\item{include.bracket}{logical.  If \code{TRUE} and \code{extract = TRUE} returns
the brackets and the bracketed text.}

\item{merge}{logical.  If \code{TRUE} the results of each bracket type will
be merged by string.  \code{FALSE} returns a named list of lists of vectors
of bracketed text per bracket type.}
}
\value{
Returns a character string with brackets removed.
}
\description{
Remove/replace/extract bracketed strings.
}
\examples{
examp <- structure(list(person = structure(c(1L, 2L, 1L, 3L),
    .Label = c("bob", "greg", "sue"), class = "factor"), text =
    c("I love chicken [unintelligible]!",
    "Me too! (laughter) It's so good.[interrupting]",
    "Yep it's awesome {reading}.", "Agreed. {is so much fun}")), .Names =
    c("person", "text"), row.names = c(NA, -4L), class = "data.frame")

examp
rm_bracket(examp$text, pattern = "square")
rm_bracket(examp$text, pattern = "curly")
rm_bracket(examp$text, pattern = c("square", "round"))
rm_bracket(examp$text)

rm_bracket(examp$text, pattern = "square", extract=TRUE)
rm_bracket(examp$text, pattern = "curly", extract=TRUE)
rm_bracket(examp$text, pattern = c("square", "round"), extract=TRUE)
rm_bracket(examp$text, pattern = c("square", "round"), merge = FALSE, extract=TRUE)
rm_bracket(examp$text, extract=TRUE)
rm_bracket(examp$tex, include.bracket=TRUE, extract=TRUE)
\dontrun{
qdap::paste2(rm_bracket(examp$tex, pattern="curly", extract=TRUE))
}
}
\author{
Martin Morgan and Tyler Rinker <tyler.rinker@gmail.com>.
}
\references{
\url{http://stackoverflow.com/q/8621066/1000343}
}
\seealso{
\code{\link[base]{gsub}},
\code{\link[qdapRegex]{rm_between}}
}
\keyword{bracket}

